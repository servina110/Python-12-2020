# Задача-1.Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
print("Task № 1")
my_list = [35, -56, 2.4, "Hello", [1, 2.0, "Hello"], {"Jon": "+1-23-45"}, {"a"}, True, None]


def my_type(el):
    for el in range(len(my_list)):
        print(type(my_list[el]))
    return


my_type(my_list)

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().
print("Task № 2")
print("Внимание !!! Не вводите большое количество элементов, рекомендация до 10")
el_count = int(input("Введите количество элементов списка >>>"))
my_list = []
i = 0
el = 0
while i < el_count:
    my_list.append(input("Введите элемент списка >>>"))
    i += 1
for elem in range(int(len(my_list) / 2)):
    my_list[el], my_list[el + 1] = my_list[el + 1], my_list[el]
    el += 2
print(my_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
print("Task № 3")
seasons_list = ['Зима', 'Весна', 'Лето', 'Осень']
seasons_dict = {1: 'Зима', 2: 'Весна', 3: 'Лето', 4: 'Осень'}
month = int(input("Введите месяц в виде целого числа >>>"))
if month == 1 or month == 12 or month == 2:
    print('(dict) Время года :', seasons_dict.get(1))
    print('(list) Время года :', seasons_list[0])
elif month == 3 or month == 4 or month == 5:
    print('(dict) Время года :', seasons_dict.get(2))
    print('(list) Время года :', seasons_list[1])
elif month == 6 or month == 7 or month == 8:
    print('(dict) Время года :', seasons_dict.get(3))
    print('(list) Время года :', seasons_list[2])
elif month == 9 or month == 10 or month == 11:
    print('(dict) Время года :', seasons_dict.get(4))
    print('(list) Время года :', seasons_list[3])
else:
    print("Такого месяца не существует")

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
print("Task № 4")
my_str = input("введите в строку несколько слов, разделенных пробелами >>>")
my_word = []
num = 1
for el in range(my_str.count(' ') + 1):
    my_word = my_str.split()
    if len(str(my_word)) <= 10:
        print(f" {num} {my_word[el]}")
        num += 1
    else:
        print(f" {num} {my_word[el][0:10]}")
        num += 1

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
print("Task № 5")
my_list = [7, 5, 3, 3, 2]
print(f"Рейтинг - {my_list}")
print("Сначала пользователь вводит число: 3 далее число: 8 далее число: 1 .- для выхода нужно ввести :555")
digit = int(input("Введите натуральное число >>>"))
while digit != 555:
    for el in range(len(my_list)):
        if my_list[el] == digit:
            my_list.insert(el + 1, digit)
            break
        elif my_list[0] < digit:
            my_list.insert(0, digit)
        elif my_list[-1] > digit:
            my_list.append(digit)
        elif my_list[el] > digit and my_list[el + 1] < digit:
            my_list.insert(el + 1, digit)
    print(f"текущий список - {my_list}")
    digit = int(input("Введите число >>>"))

# 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
#
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
print("Task № 6")
goods = []
features = {'название': '', 'цена': '', 'количество': '', 'ед': ''}
analytics = {'название': [], 'цена': [], 'количество': [], 'ед': []}
num = 0
feature_ = None
control = None
while True:
    control = input("Для выхода нажмите 'Q', для продолжения нажмите 'Enter', для анализа нажмите 'A'").upper()
    if control == 'Q':
        break
    num += 1
    if control == 'A':
        print(f'\n Current analytics \n {"-" * 30}')
        for key, value in analytics.items():
            print(f'{key[:25]:>30}: {value}')
            print("-" * 30)
    for f in features.keys():
        feature_ = input(f'Input feature "{f}"')
        features[f] = int(feature_) if (f == 'цена' or f == 'колицество') else feature_
        analytics[f].append(features[f])
    goods.append((num, features))

print("Внимание !!! Не вводите большое количество товаров, рекомендация до 3")
goods = int(input("Введите количество товара >>>"))
n = 1
my_dict = []
my_list = []
my_analys = {}
while n <= goods:
    my_dict = dict({'название': input("введите название >>>"), 'цена': input("Введите цену >>>"),
                    'количество': input('Введите количество >>>'), 'eд': input("Введите единицу измерения >>>")})
    my_list.append((n, my_dict))
    n += 1
    my_analys = dict(
        {'название': my_dict.get('название'), 'цена': my_dict.get('цена'), 'количество': my_dict.get('количество'),
         'ед': my_dict.get('ед')})
print(my_list)
print(my_analys)
